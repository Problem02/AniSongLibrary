x-common-env: &common_env
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"

services:
  # === Postgres per service ===
  pg_account:
    image: postgres:16-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: ${ACCOUNT_DB}
      POSTGRES_USER: ${ACCOUNT_USER}
      POSTGRES_PASSWORD: ${ACCOUNT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U account_user -d account_db"]
      interval: 2s
      timeout: 2s
      retries: 20

  pg_catalog:
    image: postgres:16-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: ${CATALOG_DB}
      POSTGRES_USER: ${CATALOG_USER}
      POSTGRES_PASSWORD: ${CATALOG_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalog_user -d catalog_db"]
      interval: 2s
      timeout: 2s
      retries: 20

  pg_library:
    image: postgres:16-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_db"]
      interval: 2s
      timeout: 2s
      retries: 20

  # === Auth Service ===
  account:
    build: 
      context: .
      dockerfile: backend/account/Dockerfile
      args:
        SERVICE_DIR: backend/account
    env_file: [.env]
    environment:
      <<: *common_env
      SERVICE_NAME: account
      DATABASE_URL: ${ACCOUNT_DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      pg_auth:
        condition: service_healthy
    ports: ["8003:8000"]
    command: ["bash", "/app/start.sh"]

  # === Catalog Service ===
  catalog:
    build:
      context: .
      dockerfile: backend/catalog/Dockerfile
      args:
        SERVICE_DIR: backend/catalog
    env_file: [.env]
    environment:
      <<: *common_env
      SERVICE_NAME: catalog
      DATABASE_URL: ${CATALOG_DATABASE_URL}
      ANISONGDB_BASE_URL: ${ANISONGDB_BASE_URL}
    depends_on:
      pg_catalog:
        condition: service_healthy
    ports: ["8001:8000"]
    command: ["bash", "/app/start.sh"]


  # === Library Service ===
  library:
    build:
      context: .
      dockerfile: backend/library/Dockerfile
      args:
        SERVICE_DIR: backend/library
    env_file: [.env]
    environment:
      <<: *common_env
      SERVICE_NAME: library
      DATABASE_URL: postgresql+psycopg://library_user:library_pass@pg_library:5432/library_db
    depends_on:
      pg_library:
        condition: service_healthy
    ports: ["8002:8000"]
    command: ["bash", "/app/start.sh"]

  # === Integration/Sync Service (stub) ===
  integration:
    build: 
      context: .
      dockerfile: backend/integration/Dockerfile
      args:
        SERVICE_DIR: backend/integration
    env_file: [.env]
    environment:
      <<: *common_env
      SERVICE_NAME: integration
    ports: ["8004:8000"]
    command: ["bash", "/app/start.sh"]